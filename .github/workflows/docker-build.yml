name: Build Docker

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3.3.0

    - name: Login al GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extraer metadata
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        load: true # Cargar la imagen para que esté disponible para el paso de test
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Testear contenedor
      run: |
        IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
        docker run -d --name test-container -p 5000:5000 $IMAGE_TAG
        echo "Esperando a que el contenedor inicie..."
        for i in {1..15}; do
          if curl -fs http://localhost:5000/health; then
            echo "Contenedor listo."
            curl -f http://localhost:5000/
            docker stop test-container && docker rm test-container
            exit 0
          fi
          sleep 1
        done
        echo "El contenedor no respondió a tiempo."
        docker logs test-container
        exit 1